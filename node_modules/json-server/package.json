{
  "name": "json-server",
  "version": "0.4.2",
  "description": "Serves JSON files through REST routes.",
  "main": "./src/server.js",
  "bin": {
    "json-server": "./bin/index.js"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "body-parser": "^1.8.1",
    "chalk": "^0.4.0",
    "cors": "^2.3.0",
    "errorhandler": "^1.2.0",
    "express": "^4.9.0",
    "lowdb": "^0.3.0",
    "method-override": "^2.1.2",
    "minimist": "0.0.8",
    "morgan": "^1.3.1",
    "serve-static": "^1.6.1",
    "superagent": "~0.15.7",
    "underscore": "~1.5.2",
    "underscore.inflections": "~0.2.1",
    "update-notifier": "^0.1.8",
    "yargs": "^1.2.1"
  },
  "devDependencies": {
    "supertest": "~0.8.1",
    "mocha": "~1.14.0"
  },
  "scripts": {
    "test": "mocha -R spec test",
    "start": "node server.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/typicode/json-server.git"
  },
  "keywords": [
    "JSON",
    "server",
    "fake",
    "REST",
    "API",
    "prototyping",
    "mock",
    "mocking",
    "test",
    "testing",
    "rest",
    "data",
    "dummy",
    "sandbox"
  ],
  "author": {
    "name": "Typicode",
    "email": "typicode@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/typicode/json-server/issues"
  },
  "homepage": "https://github.com/typicode/json-server",
  "readme": "<p align=\"center\">\n  <img height=\"56\" width=\"64\" src=\"http://i.imgur.com/QRlAg0b.png\"/>\n</p>\n\n# JSON Server [![Build Status](https://travis-ci.org/typicode/json-server.svg)](https://travis-ci.org/typicode/json-server) [![NPM version](https://badge.fury.io/js/json-server.svg)](http://badge.fury.io/js/json-server)\n\nGive it a JSON or JS seed file and it will serve it through REST routes.\n\nCreated with <3 for front-end developers who need a flexible back-end for quick prototyping and mocking.\n\n_Powers http://jsonplaceholder.typicode.com_\n\n## Examples\n\n### Command line interface\n\n```javascript\n// db.json\n{ \n  \"posts\": [\n    { \"id\": 1, \"body\": \"foo\" }\n  ]\n}\n```\n\n```bash\n$ json-server db.json\n$ curl -i http://localhost:3000/posts/1\n```\n\n### Node module\n\n```javascript\nvar server = require('json-server');\n\nserver.low.db = { \n  posts: [\n    { id: 1, body: 'foo' }\n  ]\n}\n\nserver.listen(3000);\n```\n\nYou can find a running demo here: http://jsonplaceholder.typicode.com.\n\n## Why?\n\n* Lets you use plain JSON or simple JS file\n* Supports __GET__ but also __POST__, __PUT__, __DELETE__ and even __PATCH__ requests\n* Can be used from anywhere through __cross domain__ requests (JSONP or CORS)\n* Can load remote JSON files ([JSON Generator](http://www.json-generator.com/), ...)\n* Can be deployed on Nodejitsu, Heroku, ...\n\n\n## Installation\n\n```bash\n$ npm install -g json-server\n```\n\n## CLI usage\n\n```bash\n\n  Usage: json-server <source> [options]\n\n  Options:\n\n    --version      output version\n    --port <port>  set port\n\n  Exemples:\n\n    json-server db.json\n    json-server seed.js\n    json-server http://example.com/db.json\n    \n```\n\n#### Input\n\nHere's 2 examples showing how to format JSON or JS seed file:\n\n* __db.json__\n\n```javascript\n{\n  \"posts\": [\n    { \"id\": 1, \"body\": \"foo\" },\n    { \"id\": 2, \"body\": \"bar\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"baz\", \"postId\": 1 },\n    { \"id\": 2, \"body\": \"qux\", \"postId\": 2 }\n  ]\n}\n```\n\n* __seed.js__\n\n```javascript\nexports.run = function() {\n  var data = {};\n\n  data.posts = [];\n  data.posts.push({ id: 1, body: 'foo' });\n  //...\n\n  return data;\n}\n```\n\nJSON Server expects JS files to export a ```run``` method that returns an object.\n\nSeed files are useful if you need to programmaticaly create a lot of data.\n\n## Routes\n\n```\nGET   /:resource\nGET   /:resource?filter=&filter=&\nGET   /:parent/:parentId/:resource\nGET   /:resource/:id\nPOST  /:resource\nPUT   /:resource/:id\nPATCH /:resource/:id\nDEL   /:resource/:id\n```\n\nTo slice resources, add `_start` and `_end`.\n\n```\nGET /:resource?_start=&_end=\nGET /:resource?filter=&filter=&_start=&_end=\nGET /:parent/:parentId/:resource?_start=&_end=\n```\n\nTo make a full-text search on resources, add `q`.\n\n```\nGET /:resource?q=\n```\n\nFor routes usage information, have a look at [JSONPlaceholder](https://github.com/typicode/jsonplaceholder) code examples.\n\n```\nGET /db\n```\n\nReturns database state.\n\n```\nGET /\n```\n\nReturns default index file or content of ./public/index.html (useful if you need to set a custom home page).\n\n## Links\n\n* [Fast prototyping using Restangular and Json-server](http://bahmutov.calepin.co/fast-prototyping-using-restangular-and-json-server.html)\n* [Grunt plugin](https://github.com/tfiwm/grunt-json-server)\n",
  "readmeFilename": "README.md",
  "_id": "json-server@0.4.2",
  "dist": {
    "shasum": "5ba081c2f37a26b3e17b8e7de36aa6b7ca599b05"
  },
  "_from": "json-server@~0.4.2",
  "_resolved": "https://registry.npmjs.org/json-server/-/json-server-0.4.2.tgz"
}
